service: dividends-scraper

frameworkVersion: "3"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-dotenv-plugin

useDotenv: true

custom:
  tableName: "dividends-table-${sls:stage}"
  start:
    docker: true
    port: 8000
    inMemory: true
    migrate: true
    seed: true
    convertEmptyValues: true
  stages:
    - dev

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - ses:SendEmail
            - ses:SendRawEmail
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - arn:aws:ses:us-east-1:496997479831:identity/*
  environment:
    DIVIDENDS_TABLE: ${self:custom.tableName}
    FROM: ${env:FROM}
    TO: ${env:TO}

functions:
  scrapeDividends:
    handler: dist/handler.run
    events:
      - schedule: rate(1 day)

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ticker
            AttributeType: S
          - AttributeName: approvalDate
            AttributeType: N
          - AttributeName: entryHash
            AttributeType: S
        KeySchema:
          - AttributeName: ticker
            KeyType: HASH
          - AttributeName: approvalDate
            KeyType: RANGE
          - AttributeName: entryHash
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
